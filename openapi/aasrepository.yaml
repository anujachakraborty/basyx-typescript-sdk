openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
  description: "The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](https://industrialdigitaltwin.org/en/content-hub/aasspecifications).  \nCopyright: Industrial Digital Twin Association (IDTA) 2025"
  contact:
    name: Industrial Digital Twin Association (IDTA)
    email: info@idtwin.org
  license:
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  version: V3.1.0_SSP-001
  x-profile-identifier: https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-001
servers:
- url: https://admin-shell.io/api/v3/
- url: https://example.com/
paths:
  /shells:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all Asset Administration Shells
      operationId: GetAllAssetAdministrationShells
      parameters:
      - name: assetIds
        in: query
        description: "A list of specific Asset identifiers. Each Asset identifier is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.1.0#/components/schemas/SpecificAssetId)"
        required: false
        style: form
        explode: true
        schema:
          type: array
          example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
          items:
            type: string
      - name: idShort
        in: query
        description: The Asset Administration Shell’s IdShort
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Asset Administration Shells
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetAdministrationShellsResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/3/0
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates a new Asset Administration Shell
      operationId: PostAssetAdministrationShell
      requestBody:
        description: Asset Administration Shell object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        required: true
      responses:
        "201":
          description: Asset Administration Shell created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAssetAdministrationShell/3/0
  /shells/$reference:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns References to all Asset Administration Shells
      operationId: GetAllAssetAdministrationShells-Reference
      parameters:
      - name: assetIds
        in: query
        description: "A list of specific Asset identifiers. Each Asset identifier is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.1.0#/components/schemas/SpecificAssetId)"
        required: false
        style: form
        explode: true
        schema:
          type: array
          example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
          items:
            type: string
      - name: idShort
        in: query
        description: The Asset Administration Shell’s IdShort
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Asset Administration Shells as a list of References
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/3/0
  /shells/{aasIdentifier}:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns a specific Asset Administration Shell
      operationId: GetAssetAdministrationShellById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Asset Administration Shell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellById/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates or updates an existing Asset Administration Shell
      operationId: PutAssetAdministrationShellById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Asset Administration Shell object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        required: true
      responses:
        "201":
          description: Asset Administration Shell created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
        "204":
          description: Asset Administration Shell updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetAdministrationShellById/3/0
    delete:
      tags:
      - Asset Administration Shell Repository API
      summary: Deletes an Asset Administration Shell
      operationId: DeleteAssetAdministrationShellById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Asset Administration Shell deleted successfully
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/3/0
  /shells/{aasIdentifier}/$reference:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns a specific Asset Administration Shell as a Reference
      operationId: GetAssetAdministrationShellById-Reference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Asset Administration Shell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellById/3/0
  /shells/{aasIdentifier}/asset-information:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Asset Information
      operationId: GetAssetInformation_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Asset Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInformation'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetInformation/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the Asset Information
      operationId: PutAssetInformation_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Asset Information object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetInformation'
        required: true
      responses:
        "204":
          description: Asset Information updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetInformation/3/0
  /shells/{aasIdentifier}/asset-information/thumbnail:
    get:
      tags:
      - Asset Administration Shell Repository API
      operationId: GetThumbnail_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The thumbnail of the Asset Information.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetThumbnail/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      operationId: PutThumbnail_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Thumbnail to upload
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/assetinformation_thumbnail_body'
            encoding:
              file:
                contentType: application/octet-stream
        required: true
      responses:
        "204":
          description: Thumbnail updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutThumbnail/3/0
    delete:
      tags:
      - Asset Administration Shell Repository API
      operationId: DeleteThumbnail_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Thumbnail deletion successful
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteThumbnail/3/0
  /shells/{aasIdentifier}/submodel-refs:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel references
      operationId: GetAllSubmodelReferences_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Requested submodel references
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelReferences/3/0
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates a submodel reference at the Asset Administration Shell
      operationId: PostSubmodelReference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Reference to the Submodel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
        required: true
      responses:
        "201":
          description: Submodel reference created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelReference/3/0
  /shells/{aasIdentifier}/submodel-refs/{submodelIdentifier}:
    delete:
      tags:
      - Asset Administration Shell Repository API
      summary: Deletes the submodel reference from the Asset Administration Shell. Does not delete the submodel itself!
      operationId: DeleteSubmodelReference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Submodel reference deleted successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelReference/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Submodel
      operationId: GetSubmodelById_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates or updates the Submodel
      operationId: PutSubmodelById_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        required: true
      responses:
        "201":
          description: Submodel reference created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        "204":
          description: Submodel updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelById/3/0
    delete:
      tags:
      - Asset Administration Shell Repository API
      summary: Deletes the submodel from the Asset Administration Shell and the Repository.
      operationId: DeleteSubmodelById_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Submodel deleted successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelById/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the Submodel
      operationId: PatchSubmodel_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: core
          enum:
          - core
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$metadata:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Submodel's metadata elements
      operationId: GetSubmodelById-Metadata_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelMetadata'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the metadata attributes of the Submodel
      operationId: PatchSubmodelById-Metadata_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Submodel object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelMetadata'
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$value:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Submodel's ValueOnly representation
      operationId: GetSubmodelById-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: Requested Submodel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelValue'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the values of the Submodel
      operationId: PatchSubmodelById-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: core
          enum:
          - core
      requestBody:
        description: Submodel object in the ValueOnly representation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelValue'
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$reference:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Submodel as a Reference
      operationId: GetSubmodelById-Reference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested Submodel as a Reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$path:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the elements of this submodel in path notation.
      operationId: GetSubmodelById-Path_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      responses:
        "200":
          description: Requested Submodel in Path notation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItem'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel elements including their hierarchy
      operationId: GetAllSubmodelElements_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: List of found submodel elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates a new submodel element
      operationId: PostSubmodelElement_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        required: true
      responses:
        "201":
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElement/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$metadata:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel elements including their hierarchy
      operationId: GetAllSubmodelElements-Metadata_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      responses:
        "200":
          description: List of found submodel elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$value:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel elements including their hierarchy in the ValueOnly representation
      operationId: GetAllSubmodelElements-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      responses:
        "200":
          description: List of found submodel elements in their ValueOnly representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsValueResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$reference:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel elements as a list of References
      operationId: GetAllSubmodelElements-Reference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        deprecated: true
        schema:
          type: string
          default: core
          enum:
          - core
      responses:
        "200":
          description: List of References of the found submodel elements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$path:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns all submodel elements including their hierarchy
      operationId: GetAllSubmodelElements-Path_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of elements in the response array
        required: false
        schema:
          minimum: 1
          type: integer
      - name: cursor
        in: query
        description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
        required: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: List of found submodel elements in the Path notation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns a specific submodel element from the Submodel at a specified path
      operationId: GetSubmodelElementByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: Requested submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates or updates an existing submodel element at a specified path within submodel elements hierarchy
      operationId: PutSubmodelElementByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        required: true
      responses:
        "201":
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
        "204":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelElementByPath/3/0
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Creates a new submodel element at a specified path within submodel elements hierarchy
      operationId: PostSubmodelElementByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Requested submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        required: true
      responses:
        "201":
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "409":
          $ref: '#/components/responses/conflict'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElementByPath/3/0
    delete:
      tags:
      - Asset Administration Shell Repository API
      summary: Deletes a submodel element at a specified path within the submodel elements hierarchy
      operationId: DeleteSubmodelElementByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Submodel element deleted successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates an existing submodel element value at a specified path within submodel elements hierarchy
      operationId: PatchSubmodelElementValueByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      requestBody:
        description: The updated value of the submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$metadata:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the metadata attributes if a specific submodel element from the Submodel at a specified path
      operationId: GetSubmodelElementByPath-Metadata_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested submodel element
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementMetadata'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the metadata attributes of an existing submodel element value at a specified path within submodel elements hierarchy
      operationId: PatchSubmodelElementValueByPath-Metadata
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The updated metadata attributes of the submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementMetadata'
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$value:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns a specific submodel element from the Submodel at a specified path in the ValueOnly representation
      operationId: GetSubmodelElementByPath-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      - name: extent
        in: query
        description: Determines to which extent the resource is being serialized
        required: false
        schema:
          type: string
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
      responses:
        "200":
          description: Requested submodel element in its ValueOnly representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementValue'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
    patch:
      tags:
      - Asset Administration Shell Repository API
      summary: Updates the value of an existing submodel element value at a specified path within submodel elements hierarchy
      operationId: PatchSubmodelElementValueByPath-ValueOnly
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      requestBody:
        description: The updated value of the submodel element
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementValue'
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$reference:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Reference of a specific submodel element from the Submodel at a specified path
      operationId: GetSubmodelElementByPath-Reference_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        deprecated: true
        schema:
          type: string
          default: core
          enum:
          - core
      responses:
        "200":
          description: Requested submodel element in its ValueOnly representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$path:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns a specific submodel element from the Submodel at a specified path in the Path notation
      operationId: GetSubmodelElementByPath-Path_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: level
        in: query
        description: Determines the structural depth of the respective resource content
        required: false
        schema:
          type: string
          default: deep
          enum:
          - deep
          - core
      responses:
        "200":
          description: Requested submodel element in the Path notation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItem'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/attachment:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Downloads file content from a specific submodel element from the Submodel at a specified path
      operationId: GetFileByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Requested file
          headers:
            Content-Disposition:
              description: In order to physically download the file usually set to attachment with a filename
              schema:
                type: string
              example: attachment; filename="filename.jpg"
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetFileByPath/3/0
    put:
      tags:
      - Asset Administration Shell Repository API
      summary: Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy
      operationId: PutFileByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: File to upload
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/idShortPath_attachment_body'
            encoding:
              file:
                contentType: application/octet-stream
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutFileByPath/3/0
    delete:
      tags:
      - Asset Administration Shell Repository API
      summary: Deletes file content of an existing submodel element at a specified path within submodel elements hierarchy
      operationId: DeleteFileByPath_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Submodel element updated successfully
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteFileByPath/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke:
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Synchronously invokes an Operation at a specified path
      operationId: InvokeOperation_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        "200":
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke/$value:
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Synchronously invokes an Operation at a specified path
      operationId: InvokeOperation-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        required: true
      responses:
        "200":
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async:
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Asynchronously invokes an Operation at a specified path
      operationId: InvokeOperationAsync_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        "202":
          $ref: '#/components/responses/accepted'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async/$value:
    post:
      tags:
      - Asset Administration Shell Repository API
      summary: Asynchronously invokes an Operation at a specified path
      operationId: InvokeOperationAsync-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        required: true
      responses:
        "202":
          $ref: '#/components/responses/accepted'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-status/{handleId}:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Operation status of an asynchronous invoked Operation
      operationId: GetOperationAsyncStatus_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: handleId
        in: path
        description: The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation result object containing information that the 'executionState' is still 'Running'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOperationResult'
        "302":
          $ref: '#/components/responses/found'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncStatus/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the Operation result of an asynchronous invoked Operation
      operationId: GetOperationAsyncResult_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: handleId
        in: path
        description: The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}/$value:
    get:
      tags:
      - Asset Administration Shell Repository API
      summary: Returns the ValueOnly notation of the Operation result of an asynchronous invoked Operation
      operationId: GetOperationAsyncResult-ValueOnly_AasRepository
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idShortPath
        in: path
        description: IdShort path to the submodel element (dot-separated)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: handleId
        in: path
        description: The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation result object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "404":
          $ref: '#/components/responses/not-found'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
  /serialization:
    get:
      tags:
      - Serialization API
      summary: Returns an appropriate serialization based on the specified format (see SerializationFormat)
      operationId: GenerateSerializationByIds
      parameters:
      - name: aasIds
        in: query
        description: The Asset Administration Shells' unique ids (UTF8-BASE64-URL-encoded)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: submodelIds
        in: query
        description: The Submodels' unique ids (UTF8-BASE64-URL-encoded)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: includeConceptDescriptions
        in: query
        description: Include Concept Descriptions?
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Requested serialization based on SerializationFormat
          content:
            application/asset-administration-shell-package+xml:
              schema:
                type: string
                description: AASX package
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment'
        "400":
          $ref: '#/components/responses/bad-request'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "500":
          $ref: '#/components/responses/internal-server-error'
        default:
          $ref: '#/components/responses/default'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GenerateSerializationByIds/3/0
  /description:
    get:
      tags:
      - Description API
      summary: Returns the self-describing information of a network resource (ServiceDescription)
      operationId: GetSelfDescription
      responses:
        "200":
          description: Requested Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSelfDescription/3/1
components:
  schemas:
    GetAssetAdministrationShellsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: '#/components/schemas/AssetAdministrationShell'
    PagedResult:
      required:
      - paging_metadata
      type: object
      properties:
        paging_metadata:
          $ref: '#/components/schemas/PagedResult_paging_metadata'
    AssetAdministrationShell:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - required:
        - assetInformation
        properties:
          derivedFrom:
            $ref: '#/components/schemas/Reference'
          assetInformation:
            $ref: '#/components/schemas/AssetInformation'
          submodels:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ^AssetAdministrationShell$
    Identifiable:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - required:
        - id
        properties:
          administration:
            $ref: '#/components/schemas/AdministrativeInformation'
          id:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
    Referable:
      allOf:
      - $ref: '#/components/schemas/HasExtensions'
      - required:
        - modelType
        properties:
          category:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          idShort:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^[a-zA-Z][a-zA-Z0-9_-]*[a-zA-Z0-9_]+$"
          displayName:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringNameType'
          description:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringTextType'
          modelType:
            $ref: '#/components/schemas/ModelType'
    HasExtensions:
      type: object
      properties:
        extensions:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Extension'
    Extension:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - name
        properties:
          name:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          refersTo:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Reference'
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticIds:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    Reference:
      allOf:
      - $ref: '#/components/schemas/ReferenceParent'
      - properties:
          referredSemanticId:
            $ref: '#/components/schemas/ReferenceParent'
    ReferenceParent:
      required:
      - keys
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Key'
    ReferenceTypes:
      type: string
      enum:
      - ExternalReference
      - ModelReference
    Key:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/KeyTypes'
        value:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
    KeyTypes:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataElement
      - Entity
      - EventElement
      - File
      - FragmentReference
      - GlobalReference
      - Identifiable
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - Referable
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
    DataTypeDefXsd:
      type: string
      enum:
      - xs:anyURI
      - xs:base64Binary
      - xs:boolean
      - xs:byte
      - xs:date
      - xs:dateTime
      - xs:decimal
      - xs:double
      - xs:duration
      - xs:float
      - xs:gDay
      - xs:gMonth
      - xs:gMonthDay
      - xs:gYear
      - xs:gYearMonth
      - xs:hexBinary
      - xs:int
      - xs:integer
      - xs:long
      - xs:negativeInteger
      - xs:nonNegativeInteger
      - xs:nonPositiveInteger
      - xs:positiveInteger
      - xs:short
      - xs:string
      - xs:time
      - xs:unsignedByte
      - xs:unsignedInt
      - xs:unsignedLong
      - xs:unsignedShort
    LangStringNameType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 128
    AbstractLangString:
      required:
      - language
      - text
      type: object
      properties:
        language:
          pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
          type: string
        text:
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
    LangStringTextType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 1023
    ModelType:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataSpecificationIec61360
      - Entity
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElementCollection
      - SubmodelElementList
    AdministrativeInformation:
      allOf:
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          version:
            type: string
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
          revision:
            type: string
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
          creator:
            $ref: '#/components/schemas/Reference'
          templateId:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
    HasDataSpecification:
      type: object
      properties:
        embeddedDataSpecifications:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
    EmbeddedDataSpecification:
      required:
      - dataSpecification
      - dataSpecificationContent
      type: object
      properties:
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent_choice'
        dataSpecification:
          $ref: '#/components/schemas/Reference'
    DataSpecificationContent_choice:
      oneOf:
      - $ref: '#/components/schemas/DataSpecificationIec61360'
    DataSpecificationIec61360:
      allOf:
      - $ref: '#/components/schemas/DataSpecificationContent'
      - required:
        - preferredName
        properties:
          preferredName:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringPreferredNameTypeIec61360'
          shortName:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringShortNameTypeIec61360'
          unit:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          unitId:
            $ref: '#/components/schemas/Reference'
          sourceOfDefinition:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          symbol:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          dataType:
            $ref: '#/components/schemas/DataTypeIec61360'
          definition:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringDefinitionTypeIec61360'
          valueFormat:
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueList:
            $ref: '#/components/schemas/ValueList'
          value:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          levelType:
            $ref: '#/components/schemas/LevelType'
          modelType:
            pattern: ^DataSpecificationIec61360$
    DataSpecificationContent:
      required:
      - modelType
      type: object
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
    LangStringPreferredNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 255
    LangStringShortNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 18
    DataTypeIec61360:
      type: string
      enum:
      - BLOB
      - BOOLEAN
      - DATE
      - FILE
      - HTML
      - INTEGER_COUNT
      - INTEGER_CURRENCY
      - INTEGER_MEASURE
      - IRDI
      - IRI
      - RATIONAL
      - RATIONAL_MEASURE
      - REAL_COUNT
      - REAL_CURRENCY
      - REAL_MEASURE
      - STRING
      - STRING_TRANSLATABLE
      - TIME
      - TIMESTAMP
    LangStringDefinitionTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 1023
    ValueList:
      required:
      - valueReferencePairs
      type: object
      properties:
        valueReferencePairs:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ValueReferencePair'
    ValueReferencePair:
      required:
      - value
      type: object
      properties:
        value:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        valueId:
          $ref: '#/components/schemas/Reference'
    LevelType:
      required:
      - max
      - min
      - nom
      - typ
      type: object
      properties:
        min:
          type: boolean
        nom:
          type: boolean
        typ:
          type: boolean
        max:
          type: boolean
    AssetInformation:
      required:
      - assetKind
      type: object
      properties:
        assetKind:
          $ref: '#/components/schemas/AssetKind'
        globalAssetId:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        specificAssetIds:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SpecificAssetId'
        assetType:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          type: string
        defaultThumbnail:
          $ref: '#/components/schemas/Resource'
    AssetKind:
      type: string
      enum:
      - Instance
      - NotApplicable
      - Role
      - Type
    SpecificAssetId:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - name
        - value
        properties:
          name:
            maxLength: 64
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          value:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          externalSubjectId:
            $ref: '#/components/schemas/Reference'
    Resource:
      required:
      - path
      type: object
      properties:
        path:
          type: string
          allOf:
          - maxLength: 2048
            minLength: 1
          - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^([a-zA-Z][a-zA-Z0-9+\\-.]*:((//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;?:@&=+$,])(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)|(//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;@&=+$,])+(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?)?(#(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?$"
        contentType:
          type: string
          allOf:
          - maxLength: 128
            minLength: 1
          - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
    Result:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        correlationId:
          maxLength: 128
          minLength: 1
          type: string
        messageType:
          type: string
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
        text:
          type: string
        timestamp:
          pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\.[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
          type: string
    GetReferencesResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: '#/components/schemas/Reference'
    Submodel:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasKind'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          submodelElements:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
          modelType:
            pattern: ^Submodel$
    HasKind:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/ModellingKind'
    ModellingKind:
      type: string
      enum:
      - Instance
      - Template
    Qualifiable:
      required:
      - modelType
      type: object
      properties:
        qualifiers:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Qualifier'
        modelType:
          $ref: '#/components/schemas/ModelType'
    Qualifier:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - type
        - valueType
        properties:
          kind:
            $ref: '#/components/schemas/QualifierKind'
          type:
            maxLength: 128
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueId:
            $ref: '#/components/schemas/Reference'
    QualifierKind:
      type: string
      enum:
      - ConceptQualifier
      - TemplateQualifier
      - ValueQualifier
    SubmodelElement_choice:
      oneOf:
      - $ref: '#/components/schemas/RelationshipElement'
      - $ref: '#/components/schemas/AnnotatedRelationshipElement'
      - $ref: '#/components/schemas/BasicEventElement'
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/Capability'
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Operation'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
      - $ref: '#/components/schemas/SubmodelElementCollection'
      - $ref: '#/components/schemas/SubmodelElementList'
    RelationshipElement:
      allOf:
      - $ref: '#/components/schemas/RelationshipElement_abstract'
      - properties:
          modelType:
            pattern: ^RelationshipElement$
    RelationshipElement_abstract:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          first:
            $ref: '#/components/schemas/Reference'
          second:
            $ref: '#/components/schemas/Reference'
    SubmodelElement:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
    AnnotatedRelationshipElement:
      allOf:
      - $ref: '#/components/schemas/RelationshipElement_abstract'
      - properties:
          annotations:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/DataElement_choice'
          modelType:
            pattern: ^AnnotatedRelationshipElement$
    DataElement_choice:
      oneOf:
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
    Blob:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            type: string
            format: byte
          contentType:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
          modelType:
            pattern: ^Blob$
    DataElement:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
    File:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            type: string
            allOf:
            - maxLength: 2048
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^([a-zA-Z][a-zA-Z0-9+\\-.]*:((//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;?:@&=+$,])(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)|(//((((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;:&=+$,])*@)?((([a-zA-Z0-9]|[a-zA-Z0-9]([a-zA-Z0-9]|-)*[a-zA-Z0-9])\\.)*([a-zA-Z]|[a-zA-Z]([a-zA-Z0-9]|-)*[a-zA-Z0-9])(\\.)?|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)(:[0-9]*)?)?|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[$,;:@&=+])+)(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?|/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*|(([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[;@&=+$,])+(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*(/((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*(;((([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])|[:@&=+$,]))*)*)*)?)(\\?(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?)?(#(([;/?:@&=+$,]|([a-zA-Z0-9]|[-_.!~*'()])|%([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])([0-9]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF]|[aA]|[bB]|[cC]|[dD]|[eE]|[fF])))*)?$"
          contentType:
            type: string
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"(([\\t !#-\\[\\]-~]|[\\x80-\\xff])|\\\\([\\t !-~]|[\\x80-\\xff]))*\"))*$"
          modelType:
            pattern: ^File$
    MultiLanguageProperty:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/LangStringTextType'
          valueId:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ^MultiLanguageProperty$
    Property:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - required:
        - valueType
        properties:
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueId:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ^Property$
    Range:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - required:
        - valueType
        properties:
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          min:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          max:
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          modelType:
            pattern: ^Range$
    ReferenceElement:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ^ReferenceElement$
    BasicEventElement:
      allOf:
      - $ref: '#/components/schemas/EventElement'
      - required:
        - direction
        - observed
        - state
        properties:
          observed:
            $ref: '#/components/schemas/Reference'
          direction:
            $ref: '#/components/schemas/Direction'
          state:
            $ref: '#/components/schemas/StateOfEvent'
          messageTopic:
            maxLength: 255
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          messageBroker:
            $ref: '#/components/schemas/Reference'
          lastUpdate:
            pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\.[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
            type: string
          minInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          maxInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\.[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          modelType:
            pattern: ^BasicEventElement$
    EventElement:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
    Direction:
      type: string
      enum:
      - input
      - output
    StateOfEvent:
      type: string
      enum:
      - "off"
      - "on"
    Capability:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          modelType:
            pattern: ^Capability$
    Entity:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          statements:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
          entityType:
            $ref: '#/components/schemas/EntityType'
          globalAssetId:
            maxLength: 2048
            minLength: 1
            pattern: "^([\\x09\\x0a\\x0d\\x20-\\ud7ff\\ue000-\\ufffd]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          specificAssetIds:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SpecificAssetId'
          modelType:
            pattern: ^Entity$
    EntityType:
      type: string
      enum:
      - CoManagedEntity
      - SelfManagedEntity
    Operation:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          inputVariables:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          outputVariables:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          inoutputVariables:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          modelType:
            pattern: ^Operation$
    OperationVariable:
      required:
      - value
      type: object
      properties:
        value:
          $ref: '#/components/schemas/SubmodelElement_choice'
    SubmodelElementCollection:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          value:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
          modelType:
            pattern: ^SubmodelElementCollection$
    SubmodelElementList:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - required:
        - typeValueListElement
        properties:
          orderRelevant:
            type: boolean
          semanticIdListElement:
            $ref: '#/components/schemas/Reference'
          typeValueListElement:
            $ref: '#/components/schemas/AasSubmodelElements'
          valueTypeListElement:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
          modelType:
            pattern: ^SubmodelElementList$
    AasSubmodelElements:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - BasicEventElement
      - Blob
      - Capability
      - DataElement
      - Entity
      - EventElement
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
    SubmodelMetadata:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/HasKind'
    SubmodelValue:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    PathItem:
      pattern: "^(([A-Za-z][A-Za-z0-9_]+)|(\\[[0-9]+\\]))((\\.[A-Za-z][A-Za-z0-9_]+)|(\\[[0-9]+\\])){0,}$"
      type: string
    GetSubmodelElementsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElement'
    GetSubmodelElementsMetadataResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelElementMetadata'
    SubmodelElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      oneOf:
      - $ref: '#/components/schemas/BlobMetadata'
      - $ref: '#/components/schemas/FileMetadata'
      - $ref: '#/components/schemas/CapabilityMetadata'
      - $ref: '#/components/schemas/EntityMetadata'
      - $ref: '#/components/schemas/BasicEventElementMetadata'
      - $ref: '#/components/schemas/MultiLanguagePropertyMetadata'
      - $ref: '#/components/schemas/OperationMetadata'
      - $ref: '#/components/schemas/PropertyMetadata'
      - $ref: '#/components/schemas/RangeMetadata'
      - $ref: '#/components/schemas/ReferenceElementMetadata'
      - $ref: '#/components/schemas/AnnotatedRelationshipElementMetadata'
      - $ref: '#/components/schemas/RelationshipElementMetadata'
      - $ref: '#/components/schemas/SubmodelElementListMetadata'
      - $ref: '#/components/schemas/SubmodelElementCollectionMetadata'
    SubmodelElementAttributes:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
    BlobMetadata:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
    FileMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    CapabilityMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    EntityMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    BasicEventElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      - properties:
          direction:
            $ref: '#/components/schemas/Direction'
          state:
            $ref: '#/components/schemas/StateOfEvent'
          messageTopic:
            maxLength: 255
            type: string
          messageBroker:
            $ref: '#/components/schemas/Reference'
          lastUpdate:
            type: string
          minInterval:
            type: string
          maxInterval:
            type: string
    MultiLanguagePropertyMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    OperationMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    PropertyMetadata:
      properties:
        valueType:
          $ref: '#/components/schemas/DataTypeDefXsd'
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    RangeMetadata:
      properties:
        valueType:
          $ref: '#/components/schemas/DataTypeDefXsd'
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    ReferenceElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    AnnotatedRelationshipElementMetadata:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
    RelationshipElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    SubmodelElementListMetadata:
      properties:
        orderRelevant:
          type: boolean
        semanticIdListElement:
          $ref: '#/components/schemas/Reference'
        typeValueListElement:
          $ref: '#/components/schemas/ModelType'
        valueTypeListElement:
          $ref: '#/components/schemas/DataTypeDefXsd'
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    SubmodelElementCollectionMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
    GetSubmodelElementsValueResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: object
            description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    GetPathItemsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - type: object
        properties:
          result:
            type: array
            items:
              $ref: '#/components/schemas/PathItem'
    SubmodelElementValue:
      oneOf:
      - $ref: '#/components/schemas/BasicEventElementValue'
      - $ref: '#/components/schemas/PropertyValue'
      - $ref: '#/components/schemas/MultiLanguagePropertyValue'
      - $ref: '#/components/schemas/BlobValue'
      - $ref: '#/components/schemas/FileValue'
      - $ref: '#/components/schemas/RangeValue'
      - $ref: '#/components/schemas/ReferenceElementValue'
      - $ref: '#/components/schemas/RelationshipElementValue'
      - $ref: '#/components/schemas/AnnotatedRelationshipElementValue'
      - $ref: '#/components/schemas/EntityValue'
      - $ref: '#/components/schemas/SubmodelElementCollectionValue'
      - $ref: '#/components/schemas/SubmodelElementListValue'
    BasicEventElementValue:
      required:
      - observed
      type: object
      properties:
        observed:
          $ref: '#/components/schemas/ReferenceValue'
    ReferenceValue:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
    PropertyValue:
      oneOf:
      - $ref: '#/components/schemas/StringValue'
      - $ref: '#/components/schemas/NumberValue'
      - $ref: '#/components/schemas/BooleanValue'
    StringValue:
      type: string
    NumberValue:
      type: number
    BooleanValue:
      type: boolean
    MultiLanguagePropertyValue:
      type: object
      description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    BlobValue:
      type: object
      properties:
        contentType:
          maxLength: 128
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    FileValue:
      type: object
      properties:
        contentType:
          maxLength: 128
          minLength: 1
          type: string
        value:
          maxLength: 2048
          minLength: 1
          type: string
    RangeValue:
      required:
      - max
      - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    ReferenceElementValue:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Key'
    RelationshipElementValue:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/ReferenceValue'
        second:
          $ref: '#/components/schemas/ReferenceValue'
    AnnotatedRelationshipElementValue:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/ReferenceValue'
        second:
          $ref: '#/components/schemas/ReferenceValue'
        annotations:
          $ref: '#/components/schemas/ValueOnly'
    ValueOnly:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    EntityValue:
      type: object
      properties:
        entityType:
          $ref: '#/components/schemas/EntityType'
        globalAssetId:
          maxLength: 2048
          minLength: 1
          pattern: "^([\\\\x09\\\\x0a\\\\x0d\\\\x20-\\\\ud7ff\\\\ue000-\\\\ufffd]|\\\\ud800[\\\\udc00-\\\\udfff]|[\\\\ud801-\\\\udbfe][\\\\udc00-\\\\udfff]|\\\\udbff[\\\\udc00-\\\\udfff])*$"
          type: string
        specificAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/SpecificAssetIdValue'
        statements:
          $ref: '#/components/schemas/ValueOnly'
    SpecificAssetIdValue:
      type: object
      description: "Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value."
    SubmodelElementCollectionValue:
      type: object
      description: The ValueOnly serialization (patternProperties and propertyNames will probably be supported with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
    SubmodelElementListValue:
      type: array
      items:
        $ref: '#/components/schemas/SubmodelElementValue'
    OperationRequest:
      type: object
      properties:
        inoutputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        inputArguments:
          type: array
          items:
            $ref: '#/components/schemas/OperationVariable'
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          type: string
    OperationResult:
      type: object
      allOf:
      - $ref: '#/components/schemas/BaseOperationResult'
      - properties:
          inoutputArguments:
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
          outputArguments:
            type: array
            items:
              $ref: '#/components/schemas/OperationVariable'
    BaseOperationResult:
      allOf:
      - $ref: '#/components/schemas/Result'
      - properties:
          executionState:
            $ref: '#/components/schemas/ExecutionState'
          success:
            type: boolean
    ExecutionState:
      type: string
      enum:
      - Initiated
      - Running
      - Completed
      - Canceled
      - Failed
      - Timeout
    OperationRequestValueOnly:
      required:
      - clientTimeoutDuration
      type: object
      properties:
        inoutputArguments:
          $ref: '#/components/schemas/ValueOnly'
        inputArguments:
          $ref: '#/components/schemas/ValueOnly'
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          type: string
    OperationResultValueOnly:
      type: object
      allOf:
      - $ref: '#/components/schemas/BaseOperationResult'
      - properties:
          inoutputArguments:
            $ref: '#/components/schemas/ValueOnly'
          outputArguments:
            $ref: '#/components/schemas/ValueOnly'
    Environment:
      type: object
      properties:
        assetAdministrationShells:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AssetAdministrationShell'
        submodels:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Submodel'
        conceptDescriptions:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ConceptDescription'
    ConceptDescription:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          isCaseOf:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ^ConceptDescription$
    ServiceDescription:
      type: object
      properties:
        profiles:
          minItems: 1
          type: array
          items:
            type: string
            example: "[\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/0/AasxFileServerServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AasxFileServerServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRegistryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRegistryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/DiscoveryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/DiscoveryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/AssetAdministrationShellRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-002\",\"https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-003\",\"https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-004\",\"https://admin-shell.io/aas/API/3/1/SubmodelRepositoryServiceSpecification/SSP-005\",\"https://admin-shell.io/aas/API/3/0/ConceptDescriptionServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/ConceptDescriptionRepositoryServiceSpecification/SSP-001\",\"https://admin-shell.io/aas/API/3/1/ConceptDescriptionRepositoryServiceSpecification/SSP-002\"]"
      description: "The Description object enables servers to present their capabilities to the clients, in particular which profiles they implement. At least one defined profile is required. Additional, proprietary attributes might be included. Nevertheless, the server must not expect that a regular client understands them."
      example: |-
        {
          "profiles": [
            "https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002",
            "https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002"
          ]
        }
    assetinformation_thumbnail_body:
      type: object
      properties:
        fileName:
          type: string
        file:
          type: string
          format: binary
    idShortPath_attachment_body:
      type: object
      properties:
        fileName:
          type: string
        file:
          type: string
          format: binary
    PagedResult_paging_metadata:
      type: object
      properties:
        cursor:
          type: string
          example: wJlCDLIl6KTWypN7T6vc6nWEmEYe99Hjf1XY1xmqV-M=#
  responses:
    bad-request:
      description: "Bad Request, e.g. the request parameters of the format of the request body is wrong."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    unauthorized:
      description: "Unauthorized, e.g. the server refused the authorization attempt."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    internal-server-error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    default:
      description: Default error handling for unmentioned status codes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    conflict:
      description: "Conflict, a resource which shall be created exists already. Might be thrown if an object with the same id (for Identifiables) or idShort (for Referables within the same Container Element or Submodel) is contained in a POST request."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    not-found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    accepted:
      description: The server has accepted the request.
      headers:
        Location:
          description: The URL where the client can find more information about the request.
          schema:
            type: string
    found:
      description: The target resource is available but at a different location.
      headers:
        Location:
          description: The URL where the client can find the target resource.
          schema:
            type: string
  parameters:
    AssetIds:
      name: assetIds
      in: query
      description: "A list of specific Asset identifiers. Each Asset identifier is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.1.0#/components/schemas/SpecificAssetId)"
      required: false
      style: form
      explode: true
      schema:
        type: array
        example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
        items:
          type: string
    IdShort:
      name: idShort
      in: query
      description: The Asset Administration Shell’s IdShort
      required: false
      style: form
      explode: true
      schema:
        type: string
    Limit:
      name: limit
      in: query
      description: The maximum number of elements in the response array
      required: false
      schema:
        minimum: 1
        type: integer
    Cursor:
      name: cursor
      in: query
      description: A server-generated identifier retrieved from pagingMetadata that specifies from which position the result listing should continue
      required: false
      schema:
        type: string
    AssetAdministrationShellIdentifier:
      name: aasIdentifier
      in: path
      description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SubmodelIdentifier:
      name: submodelIdentifier
      in: path
      description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
        - deep
        - core
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        default: withoutBlobValue
        enum:
        - withBlobValue
        - withoutBlobValue
    IdShortPath:
      name: idShortPath
      in: path
      description: IdShort path to the submodel element (dot-separated)
      required: true
      style: simple
      explode: false
      schema:
        type: string
    HandleId:
      name: handleId
      in: path
      description: The returned handle id of an operation’s asynchronous invocation used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
      required: true
      style: simple
      explode: false
      schema:
        type: string
